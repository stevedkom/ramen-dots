# Modified from the default config by stevendkom

#################################
#             Shadows           #
#################################

# With stock picom shadows do not really work with rounded corners, so they are
# turned off.

shadow = false;

shadow-radius = 15;
shadow-opacity = .5
shadow-offset-x = -10;
shadow-offset-y = -10;

shadow-exclude = [
  "name = 'Notification'",
  "class_g = 'Conky'",
  "class_g ?= 'Notify-osd'",
  "class_g = 'Cairo-clock'",
  "_GTK_FRAME_EXTENTS@:c"
];


#################################
#           Fading              #
#################################

fading = false;
fade-in-step = 0.09;
fade-out-step = 0.09;


#################################
#   Transparency / Opacity      #
#################################


active-opacity = 1.0
inactive-opacity = 0.7;
frame-opacity = 1.0;
#inactive-opacity-override = true;

focus-exclude = [ "class_g = 'Cairo-clock'", "class_g ?= 'Rofi'" ];

# Specify a list of opacity rules, in the format `PERCENT:PATTERN`,
# like `50:name *= "Firefox"`. picom-trans is recommended over this.
# Note we don't make any guarantee about possible conflicts with other
# programs that set '_NET_WM_WINDOW_OPACITY' on frame or client windows.
# example:
#    opacity-rule = [ "80:class_g = 'URxvt'" ];
#
# i3lock is 0 opacity so that the custom lock screen widgets are fully visible,
# however this makes the prompt that tells you if you are entering your password
# properly invisible, so it can be hard to tell what is happening. You can tell
# it is locked because the mouse is not visible.
opacity-rule = [
  "0:name *= 'i3lock'"
]


#################################
#           Corners             #
#################################

corner-radius = 12

rounded-corners-exclude = [
  "window_type = 'dock'",
  "window_type = 'desktop'"
];


#################################
#       General Settings        #
#################################

# I use --experimental-backends to get this all to work when starting picom
backend = "glx";

vsync = true;

mark-wmwin-focused = true;
mark-ovredir-focused = false;
detect-rounded-corners = true;

detect-client-opacity = true;
detect-transient = true;

glx-no-stencil = true;
use-damage = true;

log-level = "warn";


# Window type settings
#
# 'WINDOW_TYPE' is one of the 15 window types defined in EWMH standard:
#     "unknown", "desktop", "dock", "toolbar", "menu", "utility",
#     "splash", "dialog", "normal", "dropdown_menu", "popup_menu",
#     "tooltip", "notification", "combo", and "dnd".
#
# Following per window-type options are available: ::
#
#   fade, shadow:::
#     Controls window-type-specific shadow and fade settings.
#
#   opacity:::
#     Controls default opacity of the window type.
#
#   focus:::
#     Controls whether the window of this type is to be always considered focused.
#     (By default, all window types except "normal" and "dialog" has this on.)
#
#   full-shadow:::
#     Controls whether shadow is drawn under the parts of the window that you
#     normally won't be able to see. Useful when the window has parts of it
#     transparent, and you want shadows in those areas.
#
#   clip-shadow-above:::
#     Controls wether shadows that would have been drawn above the window should
#     be clipped. Useful for dock windows that should have no shadow painted on top.
#
#   redir-ignore:::
#     Controls whether this type of windows should cause screen to become
#     redirected again after been unredirected. If you have unredir-if-possible
#     set, and doesn't want certain window to cause unnecessary screen redirection,
#     you can set this to `true`.
#
wintypes:
{
  #tooltip = { fade = true; shadow = true; opacity = 0.75; focus = true; full-shadow = false; };
  #dock = { shadow = false; clip-shadow-above = true; }
  dnd = { shadow = false; }
  #popup_menu = { opacity = 0.8; }
  #dropdown_menu = { opacity = 0.8; }
};